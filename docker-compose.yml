version: '3.7'

services:
  # PHP-FPM - Service
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: app_pc
    restart: always
    tty: true
    working_dir: /var/www
    volumes:
      - ./server:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - pc-network

  # NGINX - Service
  web:
    image: nginx:alpine
    container_name: web_pc
    restart: always
    tty: true
    ports:
      - "7070:80"
    volumes:
      - ./server:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - pc-network

  # MySQL - Service
  db:
    image: mysql:5.6
    container_name: db_pc
    restart: always
    environment:
      MYSQL_DATABASE: computer-py
      MYSQL_ROOT_PASSWORD: laravel
    volumes:
      - pc-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    ports:
      - "3306:3306"
    networks:
      - pc-network

  # phpmyadmin - Service
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: myadmin_pc
    restart: always
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: laravel
    ports:
      - "7071:80"
    networks:
      - pc-network

  # adminer
  adminer:
    depends_on:
      - db
    image: adminer:latest
    container_name: adminer_pc
    environment:
      ADMINER_DEFAULT_SERVER: db
    ports:
      - "7777:7071"

  # Mailhog - Service
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog_pc
    ports:
      - "7025:8025"
      - "1025:1025"

  # MariaDB - Service
  # MariaDB:
  #   image: mariadb:10.5.6
  #   container_name: MariaDB
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_DATABASE: computer-py
  #     MYSQL_ROOT_PASSWORD: 123456
  #   volumes:
  #     - pc-data:/var/lib/mysql
  #     - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
  #   networks:
  #     - pc-network

# Networks
networks:
  pc-network:
    driver: bridge

# Volumes
volumes:
  pc-data:
    driver: local